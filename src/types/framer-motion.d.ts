declare module 'framer-motion' {
  import { ComponentType, HTMLAttributes, ReactNode } from 'react';

  export interface MotionProps extends HTMLAttributes<HTMLElement> {
    children?: ReactNode;
    className?: string;
    onClick?: () => void;
    type?: string;
    href?: string;
    whileHover?: any;
    whileTap?: any;
    whileFocus?: any;
    whileInView?: any;
    initial?: any;
    animate?: any;
    exit?: any;
    variants?: any;
    transition?: any;
    viewport?: any;
    layoutId?: string;
    style?: React.CSSProperties;
    key?: string | number;
  }

  export const motion: {
    div: ComponentType<MotionProps>;
    button: ComponentType<MotionProps>;
    a: ComponentType<MotionProps>;
    h1: ComponentType<MotionProps>;
    h2: ComponentType<MotionProps>;
    h3: ComponentType<MotionProps>;
    h4: ComponentType<MotionProps>;
    h5: ComponentType<MotionProps>;
    h6: ComponentType<MotionProps>;
    p: ComponentType<MotionProps>;
    span: ComponentType<MotionProps>;
    section: ComponentType<MotionProps>;
    article: ComponentType<MotionProps>;
    header: ComponentType<MotionProps>;
    footer: ComponentType<MotionProps>;
    nav: ComponentType<MotionProps>;
    main: ComponentType<MotionProps>;
    aside: ComponentType<MotionProps>;
    form: ComponentType<MotionProps>;
    input: ComponentType<MotionProps>;
    textarea: ComponentType<MotionProps>;
    select: ComponentType<MotionProps>;
    option: ComponentType<MotionProps>;
    label: ComponentType<MotionProps>;
    fieldset: ComponentType<MotionProps>;
    legend: ComponentType<MotionProps>;
    ul: ComponentType<MotionProps>;
    ol: ComponentType<MotionProps>;
    li: ComponentType<MotionProps>;
    dl: ComponentType<MotionProps>;
    dt: ComponentType<MotionProps>;
    dd: ComponentType<MotionProps>;
    table: ComponentType<MotionProps>;
    thead: ComponentType<MotionProps>;
    tbody: ComponentType<MotionProps>;
    tfoot: ComponentType<MotionProps>;
    tr: ComponentType<MotionProps>;
    th: ComponentType<MotionProps>;
    td: ComponentType<MotionProps>;
    caption: ComponentType<MotionProps>;
    col: ComponentType<MotionProps>;
    colgroup: ComponentType<MotionProps>;
    img: ComponentType<MotionProps>;
    video: ComponentType<MotionProps>;
    audio: ComponentType<MotionProps>;
    source: ComponentType<MotionProps>;
    track: ComponentType<MotionProps>;
    canvas: ComponentType<MotionProps>;
    svg: ComponentType<MotionProps>;
    path: ComponentType<MotionProps>;
    circle: ComponentType<MotionProps>;
    rect: ComponentType<MotionProps>;
    line: ComponentType<MotionProps>;
    polyline: ComponentType<MotionProps>;
    polygon: ComponentType<MotionProps>;
    ellipse: ComponentType<MotionProps>;
    defs: ComponentType<MotionProps>;
    g: ComponentType<MotionProps>;
    text: ComponentType<MotionProps>;
    tspan: ComponentType<MotionProps>;
    textPath: ComponentType<MotionProps>;
    clipPath: ComponentType<MotionProps>;
    mask: ComponentType<MotionProps>;
    pattern: ComponentType<MotionProps>;
    marker: ComponentType<MotionProps>;
    symbol: ComponentType<MotionProps>;
    use: ComponentType<MotionProps>;
    image: ComponentType<MotionProps>;
    switch: ComponentType<MotionProps>;
    foreignObject: ComponentType<MotionProps>;
    view: ComponentType<MotionProps>;
    animate: ComponentType<MotionProps>;
    set: ComponentType<MotionProps>;
    animateMotion: ComponentType<MotionProps>;
    animateTransform: ComponentType<MotionProps>;
    mpath: ComponentType<MotionProps>;
    feBlend: ComponentType<MotionProps>;
    feColorMatrix: ComponentType<MotionProps>;
    feComponentTransfer: ComponentType<MotionProps>;
    feComposite: ComponentType<MotionProps>;
    feConvolveMatrix: ComponentType<MotionProps>;
    feDiffuseLighting: ComponentType<MotionProps>;
    feDisplacementMap: ComponentType<MotionProps>;
    feDistantLight: ComponentType<MotionProps>;
    feDropShadow: ComponentType<MotionProps>;
    feFlood: ComponentType<MotionProps>;
    feFuncA: ComponentType<MotionProps>;
    feFuncB: ComponentType<MotionProps>;
    feFuncG: ComponentType<MotionProps>;
    feFuncR: ComponentType<MotionProps>;
    feGaussianBlur: ComponentType<MotionProps>;
    feImage: ComponentType<MotionProps>;
    feMerge: ComponentType<MotionProps>;
    feMergeNode: ComponentType<MotionProps>;
    feMorphology: ComponentType<MotionProps>;
    feOffset: ComponentType<MotionProps>;
    fePointLight: ComponentType<MotionProps>;
    feSpecularLighting: ComponentType<MotionProps>;
    feSpotLight: ComponentType<MotionProps>;
    feTile: ComponentType<MotionProps>;
    feTurbulence: ComponentType<MotionProps>;
  };
  export const AnimatePresence: ComponentType<any>;
}
